import sqlite3
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
import datetime
from config import BOT_TOKEN
from utilities import keyboard
from aiogram.dispatcher.filters import Text
from aiogram.types import InlineQuery, InlineQueryResultArticle, InputTextMessageContent

TOKEN = BOT_TOKEN
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

hello_messages ={
    "day": "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –†–∞–¥—ã –≤–∏–¥–µ—Ç—å –í–∞—Å –≤ –Ω–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ –î–æ–∫—Ç–æ—Ä –ì–∞–¥–∂–µ—Ç! \nüîπ–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —Å –≤—ã–±–æ—Ä–æ–º –≥–∞–¥–∂–µ—Ç–æ–≤ –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–≤ \nüîπ–ù–∞—à —Å–µ—Ä–≤–∏—Å ‚Äú–î–æ–∫—Ç–æ—Ä –ì–∞–¥–∂–µ—Ç‚Äù –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ –∞–¥—Ä–µ—Å—É: \n–≥.–î–æ–Ω–µ—Ü–∫ —É–ª.–ü–æ–ª–æ—Ü–∫–∞—è 17 (–æ—Ä–∏–Ω–µ—Ç–∏—Ä: –ú–∞–π—Å–∫–∏–π —Ä—ã–Ω–æ–∫) \nüîπ–†–∞–±–æ—Ç–∞–µ–º —Å–æ –í—Ç–æ—Ä–Ω–∏–∫–∞ –ø–æ –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ \nüîπ–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: —Å 09:00 –¥–æ 16:00\nüîπ–¢–µ–ª: +7 949 (504) 22-88",
    "morning":"–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! –†–∞–¥—ã –≤–∏–¥–µ—Ç—å –í–∞—Å –≤ –Ω–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ –î–æ–∫—Ç–æ—Ä –ì–∞–¥–∂–µ—Ç! \nüîπ–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —Å –≤—ã–±–æ—Ä–æ–º –≥–∞–¥–∂–µ—Ç–æ–≤ –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–≤ \nüîπ–ù–∞—à —Å–µ—Ä–≤–∏—Å ‚Äú–î–æ–∫—Ç–æ—Ä –ì–∞–¥–∂–µ—Ç‚Äù –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ –∞–¥—Ä–µ—Å—É: \n–≥.–î–æ–Ω–µ—Ü–∫ —É–ª.–ü–æ–ª–æ—Ü–∫–∞—è 17 (–æ—Ä–∏–Ω–µ—Ç–∏—Ä: –ú–∞–π—Å–∫–∏–π —Ä—ã–Ω–æ–∫) \nüîπ–†–∞–±–æ—Ç–∞–µ–º —Å–æ –í—Ç–æ—Ä–Ω–∏–∫–∞ –ø–æ –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ \nüîπ–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: —Å 09:00 –¥–æ 16:00\nüîπ–¢–µ–ª: +7 949 (504) 22-88",
    "night": "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä! –†–∞–¥—ã –≤–∏–¥–µ—Ç—å –í–∞—Å –≤ –Ω–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ –î–æ–∫—Ç–æ—Ä –ì–∞–¥–∂–µ—Ç! \nüîπ–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —Å –≤—ã–±–æ—Ä–æ–º –≥–∞–¥–∂–µ—Ç–æ–≤ –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–≤ \nüîπ–ù–∞—à —Å–µ—Ä–≤–∏—Å ‚Äú–î–æ–∫—Ç–æ—Ä –ì–∞–¥–∂–µ—Ç‚Äù –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ –∞–¥—Ä–µ—Å—É: \n–≥.–î–æ–Ω–µ—Ü–∫ —É–ª.–ü–æ–ª–æ—Ü–∫–∞—è 17 (–æ—Ä–∏–Ω–µ—Ç–∏—Ä: –ú–∞–π—Å–∫–∏–π —Ä—ã–Ω–æ–∫) \nüîπ–†–∞–±–æ—Ç–∞–µ–º —Å–æ –í—Ç–æ—Ä–Ω–∏–∫–∞ –ø–æ –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ \nüîπ–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: —Å 09:00 –¥–æ 16:00\nüîπ–¢–µ–ª: +7 949 (504) 22-88"
}

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    kb = types.ReplyKeyboardMarkup(
        keyboard=keyboard.kb,
        resize_keyboard=True,
    )
    print(get_greeting())
    await message.answer(str(get_greeting()), reply_markup=kb)

   
@dp.message_handler(Text(equals = "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"))
async def get_category(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=keyboard.main_inline_kb)


@dp.callback_query_handler(lambda c: c.data.startswith('computer_peripherals_data'))
async def category_menu_change(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id,
                                message_id=callback_query.message.message_id,
                                text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é",
                                reply_markup=keyboard.peripherals_kb)
    
@dp.callback_query_handler(lambda c: c.data.startswith('computer_accessories_data'))
async def category_menu_change(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id,
                                message_id=callback_query.message.message_id,
                                text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é",
                                reply_markup=keyboard.accessories_kb)

@dp.callback_query_handler(lambda c: c.data.startswith('phone_pad_data'))
async def category_menu_change(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id,
                                message_id=callback_query.message.message_id,
                                text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é",
                                reply_markup=keyboard.mobile_kb)

@dp.callback_query_handler(lambda c: c.data.startswith('e-cars_data'))
async def category_menu_change(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id,
                                message_id=callback_query.message.message_id,
                                text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é",
                                reply_markup=keyboard.e_cars_kb)
    
@dp.callback_query_handler(lambda c: c.data.startswith('bluetooth_data'))
async def category_menu_change(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id,
                                message_id=callback_query.message.message_id,
                                text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é",
                                reply_markup=keyboard.bluetooth_kb)
    
@dp.callback_query_handler(lambda c: c.data.startswith('back_to_main_data'))
async def category_menu_change(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id,
                                message_id=callback_query.message.message_id,
                                text="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
                                reply_markup=keyboard.main_inline_kb)

def get_greeting():
    now = datetime.datetime.now()
    current_hour = int(now.strftime("%H"))
    if 6 <= current_hour < 12:
        return hello_messages["morning"]
    elif 12 <= current_hour < 18:
        return hello_messages["day"]
    else:
        return hello_messages["night"]
    

if __name__ == '__main__':
    executor.start_polling(dp)
